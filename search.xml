<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>读书笔记 - 用生活尝试就能看懂财务报表</title>
      <link href="/2018/04/21/%E7%94%A8%E7%94%9F%E6%B4%BB%E5%B0%9D%E8%AF%95%E5%B0%B1%E8%83%BD%E7%9C%8B%E6%87%82%E8%B4%A2%E5%8A%A1%E6%8A%A5%E8%A1%A8/"/>
      <url>/2018/04/21/%E7%94%A8%E7%94%9F%E6%B4%BB%E5%B0%9D%E8%AF%95%E5%B0%B1%E8%83%BD%E7%9C%8B%E6%87%82%E8%B4%A2%E5%8A%A1%E6%8A%A5%E8%A1%A8/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> books </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于 Notepad++</title>
      <link href="/2018/04/19/notepadplusplus-tips/"/>
      <url>/2018/04/19/notepadplusplus-tips/</url>
      <content type="html"><![CDATA[<p>本文整理 Notepad++ 相关技巧</p><h1 id="插件-MarkdownViewerPlusPlus"><a href="#插件-MarkdownViewerPlusPlus" class="headerlink" title="插件 MarkdownViewerPlusPlus"></a>插件 <a href="https://github.com/nea/MarkdownViewerPlusPlus" target="_blank" rel="noopener">MarkdownViewerPlusPlus</a></h1><p>Download a release version and copy the included MarkdownViewerPlusPlus.dll to<br>the plugins sub-folder at your Notepad++ installation directory. The plugin<br>adds a small Markdown icon Markdown icon to the toolbar to toggle the viewer<br>as dockable panel.</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>使用GitHub和Hexo写博客</title>
      <link href="/2018/04/19/github-hexo-blog/"/>
      <url>/2018/04/19/github-hexo-blog/</url>
      <content type="html"><![CDATA[<p>本文记录创建此博客的过程。</p><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装<a href="http://nodejs.org" target="_blank" rel="noopener">Node.js</a></h1><p>安装64-bit版本，保持默认设置即可，使用命令<code>node -v</code>或<code>npm -v</code>检查安装是否正确。</p><a id="more"></a><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装<a href="http://git-scm.com" target="_blank" rel="noopener">Git</a></h1><p>安装64-bit版本，保持默认设置即可，使用命令<code>git --version</code>检查安装是否正确。</p><h1 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a>配置<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a></h1><ul><li>注册账号”yourname”</li><li>创建仓库”yourname.github.io”</li></ul><h1 id="配置SSH-keys"><a href="#配置SSH-keys" class="headerlink" title="配置SSH keys"></a>配置SSH keys</h1><ul><li><p>打开Git Bash, 生成SSH KEY</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"yourname@hotmail.com"</span></span><br></pre></td></tr></table></figure></li><li><p>打开文件id_rsa.pub，复制文件内容</p></li><li>登陆GitHub，点击右上角的 Account Settings—&gt;SSH Public keys —&gt; add another public keys</li><li>把你本地生成的密钥复制到里面(key文本框中)， 点击<code>add key</code></li><li>测试配置是否成功 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@GitHub.com</span><br></pre></td></tr></table></figure></li></ul><h1 id="域名GoDaddy"><a href="#域名GoDaddy" class="headerlink" title="域名GoDaddy"></a>域名<a href="https://sg.godaddy.com/zh/" target="_blank" rel="noopener">GoDaddy</a></h1><ul><li>购买域名”yoursite.com”</li><li>点击你的账户，管理我的域名</li><li>将GoDaddy的Nameservers更改成 f1g1ns1.dnspod.net 和 f1g1ns2.dnspod.net</li></ul><h1 id="配置DNSpod"><a href="#配置DNSpod" class="headerlink" title="配置DNSpod"></a>配置<a href="https://www.dnspod.cn/" target="_blank" rel="noopener">DNSpod</a></h1><ul><li>注册</li><li>添加配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   A     192.30.252.153</span><br><span class="line">@   A     192.30.252.154</span><br><span class="line">www CNAME yourname.github.io</span><br></pre></td></tr></table></figure></li></ul><h1 id="生成和发布-Hexo"><a href="#生成和发布-Hexo" class="headerlink" title="生成和发布 Hexo"></a>生成和发布 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> d:/hexo</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo g <span class="comment"># 或者hexo generate</span></span><br><span class="line">$ hexo s <span class="comment"># 或者hexo server，可以在http://localhost:4000/ 查看</span></span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo generate (hexo g) #生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</span><br><span class="line">hexo server (hexo s) #启动本地web服务，用于博客的预览</span><br><span class="line">hexo deploy (hexo d) #部署播客到远端(比如github, heroku等平台)</span><br><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br></pre></td></tr></table></figure><h2 id="常用简写"><a href="#常用简写" class="headerlink" title="常用简写"></a>常用简写</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo n == hexo new</span><br><span class="line">$ hexo g == hexo generate</span><br><span class="line">$ hexo s == hexo server</span><br><span class="line">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>部署到github，需要在配置文件_config.yml中作如下修改：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url: http://yoursite.com</span><br><span class="line">...</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>然后在命令行中执行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><p>测试yml可以使用<a href="http://www.yamllint.com/" target="_blank" rel="noopener">YAML Lint</a></p><h2 id="使用git命令行部署"><a href="#使用git命令行部署" class="headerlink" title="使用git命令行部署"></a>使用git命令行部署</h2><p>将我们之前创建的repo克隆到本地，新建一个目录叫做.deploy用于存放克隆的代码<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> d:/hexo/blog</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/yourname/yourname.github.io.git .deploy/yourname.github.io</span><br></pre></td></tr></table></figure></p><p>创建一个deploy脚本文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">cp -R public/* .deploy/yourname.github.io</span><br><span class="line">cd .deploy/yourname.github.io</span><br><span class="line">git add .</span><br><span class="line">git commit -m “update”</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><h2 id="添加CNAME文件"><a href="#添加CNAME文件" class="headerlink" title="添加CNAME文件"></a>添加CNAME文件</h2><p>在source目录下创建CNAME文件，文件内容是<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yoursite.com</span><br></pre></td></tr></table></figure></p><p>执行命令<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>这里以主题yilia为例进行说明。</p><ul><li><p>安装主题</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure></li><li><p>启用主题<br>修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为yilia。<br>更新主题</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd themes/yilia</span><br><span class="line">$ git pull</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
    </entry>
    
  
  
</search>
